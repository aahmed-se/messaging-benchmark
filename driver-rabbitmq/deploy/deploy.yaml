#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

- name: Install RabbitMQ Cluster
  hosts: rabbitmq
  connection: ssh
  tasks:
  - name: Install RPM packages
    yum: pkg={{ item }} state=latest
    with_items:
      - wget
      - java
      - sysstat
      - vim
  - name: Download erlang rpm
    get_url:
      url: https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm
      dest: /tmp/erlang-solutions-1.0-1.noarch.rpm
  - name: Install Erlang
    yum:
      name: /tmp/erlang-solutions-1.0-1.noarch.rpm
      state: present
  - name: Install Rabbitmq Server
    yum:
      name: http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.14/rabbitmq-server-3.6.14-1.el6.noarch.rpm
      state: present

  - name: change master hostname to rabbitmaster
    hostname:
      name: "rabbitmaster"
    when: rabbitmq_master is defined

  - name: change slave1 hostname to rabbitslave1
    hostname:
      name: "rabbitslave1"
    when: rabbitslave1 is defined

  - name: change slave2 hostname to rabbitslave2
    hostname:
      name: "rabbitslave2"
    when: rabbitslave2 is defined

  - name: add entries to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: "{{ item.line }}"
      state: present
    with_items:
      - { line: "{{ groups['rabbitmq'][0] }} rabbitmaster" }
      - { line: "{{ groups['rabbitmq'][1] }} rabbitslave1" }
      - { line: "{{ groups['rabbitmq'][2] }} rabbitslave2" }

  # - name: stop rabbitmq
  #   shell: rabbitmqctl stop_app
  # - name: kill rabbitmq
  #   shell: rabbitmqctl stop ; ps aux | grep rabbitmq | grep -v grep | awk '{print $2}'| xargs kill -9
  # - name: reset rabbitmq
  #   shell: rabbitmqctl reset

  - name: start rabbitmq server
    service:  name=rabbitmq-server  state=started
  - name: install web management
    shell: rabbitmq-plugins enable rabbitmq_management
  - name: restart rabbitmq server
    service:  name=rabbitmq-server  state=restarted
  # - name: create admin/admin  profile
  #   shell:  rabbitmqctl add_user admin  admin
  # - name: set admin tag
  #   shell: rabbitmqctl set_user_tags admin administrator
  # - name: set admin permission
  #   shell: rabbitmqctl set_permissions -p "/" admin ".*" ".*" ".*"
  - name: clear servers erlang cookie
    shell: rm -f  /var/lib/rabbitmq/.erlang.cookie
  - name: copy erlang.cookie
    copy: src=erlang.cookie  dest=/var/lib/rabbitmq/.erlang.cookie  owner=rabbitmq group=rabbitmq mode=0400
  - name: kill rabbitmq
    shell: rabbitmqctl stop ; ps aux | grep rabbitmq | grep -v grep | awk '{print $2}'| xargs kill -9 ; rabbitmq-server -detached
  - name: start rabbitmq
    service: name=rabbitmq-server enabled=yes state=restarted
  - name: rabbitmq status
    shell: rabbitmqctl cluster_status
    register: result
  - debug: msg='{{result.stdout}}'
  - name: rabbit cluster stop slaves
    shell: rabbitmqctl stop_app
    when: rabbitmq_slave is defined
  - name: rabbit cluster slaves join master
    shell: rabbitmqctl join_cluster rabbit@rabbitmaster
    when: rabbitmq_slave is defined
  - name: rabbit cluster slaves start slaves
    shell: rabbitmqctl start_app
    when: rabbitmq_slave is defined
  - name: show rabbitmq cluster status
    shell: rabbitmqctl cluster_status
  - name: create ha pllicy
    shell: rabbitmqctl set_policy ha-all "^" '{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}'
    when: rabbitmq_master is defined
  # - name: add queue taxCodeInvoiceQueue
  #   rabbitmq_queue: name=cmcc_zzs_taxCodeInvoiceQueue
  #   when: rabbitmq_master is defined
  # - name: add queue cmcc_zzs_generatorInvoiceQueue
  #   rabbitmq_queue: name=cmcc_zzs_generatorInvoiceQueue
  #   when: rabbitmq_master is defined
  # - name: add queue cmcc_zzs_pushInvoiceQueue
  #   rabbitmq_queue: name=cmcc_zzs_pushInvoiceQueue
  #   when: rabbitmq_master is defined
  # - name: add queue cmcc_zzs_sentToPlatformServerQueue
  #   rabbitmq_queue: cmcc_zzs_sentToPlatformServerQueue
  #   when: rabbitmq_master is defined
  - name: show queue list
    shell: rabbitmqctl list_queues
    register: result_queue
  - debug: msg='{{result_queue.stdout}}'